// Generated by CoffeeScript 1.6.1
(function() {

  describe('Truman', function() {
    beforeEach(function() {
      return Truman.delay = 0;
    });
    return describe('intercepts handlers', function() {
      var createGetRequest, handler, prepareAsyncTest;
      handler = null;
      beforeEach(function() {
        return handler = jasmine.createSpy();
      });
      prepareAsyncTest = function(makeAjaxRequest) {
        var expectation;
        runs(makeAjaxRequest);
        expectation = function() {
          return handler.callCount > 0;
        };
        waitsFor(expectation, 'handler never called', 100);
        return runs(function() {
          return expect(handler).toHaveBeenCalledWith('[]');
        });
      };
      createGetRequest = function() {
        var xhr;
        xhr = new XMLHttpRequest();
        xhr.open('GET', '/examples');
        return xhr;
      };
      it('added with the onload method', function() {
        return prepareAsyncTest(function() {
          var xhr;
          xhr = createGetRequest();
          xhr.onload = function() {
            if (xhr.readyState === 4) {
              return handler(xhr.responseText);
            }
          };
          return xhr.send();
        });
      });
      it('added with the onreadystatechange method', function() {
        return prepareAsyncTest(function() {
          var xhr;
          xhr = createGetRequest();
          xhr.onreadystatechange = function() {
            if (xhr.readyState === 4) {
              return handler(xhr.responseText);
            }
          };
          return xhr.send();
        });
      });
      it('added with the onprogress method', function() {
        return prepareAsyncTest(function() {
          var xhr;
          xhr = createGetRequest();
          xhr.onprogress = function() {
            if (xhr.readyState === 4) {
              return handler(xhr.responseText);
            }
          };
          return xhr.send();
        });
      });
      return it('added with addEventListener("load")', function() {
        return prepareAsyncTest(function() {
          var xhr;
          xhr = createGetRequest();
          xhr.addEventListener('load', function() {
            return handler(xhr.responseText);
          });
          return xhr.send();
        });
      });
    });
  });

}).call(this);
